{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/main/main.component.css","webpack:///./src/app/components/main/main.component.html","webpack:///./src/app/components/main/main.component.ts","webpack:///./src/app/components/nav/nav.component.css","webpack:///./src/app/components/nav/nav.component.html","webpack:///./src/app/components/nav/nav.component.ts","webpack:///./src/app/services/movie.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './components/main/main.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'main',\r\n    component: MainComponent\r\n  }, {\r\n    path: '**',\r\n    redirectTo: 'main'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-nav></app-nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'MovieApp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http'; \r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { NavComponent } from './components/nav/nav.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    NavComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div id=\\\"home\\\" class=\\\"container-fluid\\\">\\r\\n  <h3 id=\\\"title\\\" class=\\\"text-muted text-center mb-3\\\">Now Playing</h3>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div id=\\\"nowPlayingContainer\\\" *ngFor=\\\"let movie of movieArr\\\">\\r\\n      <div id=\\\"addPadding\\\" class=\\\"col-lg3-col-sm-4 my-5\\\">\\r\\n        <img\\r\\n          alt=\\\"no_poster_image\\\"\\r\\n          *ngIf=\\\"!movie.poster_path\\\"\\r\\n          class=\\\"center\\\"\\r\\n          src=\\\"https://s3.amazonaws.com/project2-dt/no_poster_available.jpg\\\"\\r\\n        />\\r\\n        <img\\r\\n          alt=\\\"movie_poster\\\"\\r\\n          *ngIf=\\\"movie.poster_path\\\"\\r\\n          class=\\\"center\\\"\\r\\n          src=\\\"{{ imgUrl }}{{ movie.poster_path }}\\\"\\r\\n        />\\r\\n\\r\\n        <p class=\\\"text-muted text-center mb-3\\\" id=\\\"mTitle\\\">\\r\\n          {{ movie.title }}\\r\\n        </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { MovieService } from \"src/app/services/movie.service\";\r\n\r\n@Component({\r\n  selector: \"app-main\",\r\n  templateUrl: \"./main.component.html\",\r\n  styleUrls: [\"./main.component.css\"]\r\n})\r\nexport class MainComponent implements OnInit {\r\n  constructor(private movieService: MovieService) {}\r\n\r\n  ngOnInit() {\r\n    this.getNowPlaying();\r\n  }\r\n\r\n  movieArr: Object[] = [];\r\n  imgUrl: string = \"http://image.tmdb.org/t/p/w300\";\r\n\r\n  getNowPlaying() {\r\n    this.movieService.getNowPlaying()\r\n    .then((res) => {\r\n      console.log(res.results);\r\n      this.movieArr = res.results;\r\n    })\r\n    .catch((e)=>console.log(e));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2L25hdi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"navbar-header\\\">\\r\\n\\t\\t\\t<div class=\\\"navbar-header\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\r\\n\\t\\t\\t\\t  <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n\\t\\t\\t\\t  <span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t  <span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t  <span class=\\\"icon-bar\\\"></span>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t<a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\"><strong>Heroes</strong></a>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"collapse navbar-collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li><a routerLink=\\\"/register\\\">Register</a></li>\\r\\n\\t\\t\\t\\t<li><a routerLink=\\\"/find\\\">Find</a></li>\\r\\n\\t\\t\\t\\t<li><a routerLink=\\\"/all\\\">All</a></li>\\r\\n      </ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class MovieService {\r\n  private testUrl: string =\r\n    \"https://api.themoviedb.org/3/movie/now_playing?api_key=5d0c0be0b57a0b544ed4f305ebcdfee8&language=en-US&page=1\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getNowPlaying(): Promise<MoviesModel> {\r\n    return this.http.get<MoviesModel>(`${this.testUrl}`).toPromise();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}